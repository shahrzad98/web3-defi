/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { USDRetriever } from "../USDRetriever";

export class USDRetriever__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<USDRetriever> {
    return super.deploy(overrides || {}) as Promise<USDRetriever>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): USDRetriever {
    return super.attach(address) as USDRetriever;
  }
  connect(signer: Signer): USDRetriever__factory {
    return super.connect(signer) as USDRetriever__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): USDRetriever {
    return new Contract(address, _abi, signerOrProvider) as USDRetriever;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ApproveTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ReceivedTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferTokens",
    type: "event",
  },
  {
    inputs: [],
    name: "getUSDBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUSDToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610130806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c8063c1201054146037578063f5e96fc914604f575b600080fd5b603d6071565b60408051918252519081900360200190f35b605560eb565b604080516001600160a01b039092168252519081900360200190f35b60008054604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801560bc57600080fd5b505afa15801560cf573d6000803e3d6000fd5b505050506040513d602081101560e457600080fd5b5051905090565b6000546001600160a01b03169056fea2646970667358221220eae63a536d44eb623a3c6458dfa7f591dcedbf4501c3c6c7a179a6d1db405ad564736f6c63430007060033";
